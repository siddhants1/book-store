{
    "swagger": "2.0",
    "info": {
        "description": "Node JS based Express powered API for Book Store",
        "version": "1.0.0",
        "title": "Book Store"
    },
    "schemes": [
        "http"
    ],
    "host": "localhost:3001",
    "basePath": "/",
    "tags": [
        {
            "name": "health"
        },
        {
            "name": "seller"
        },
        {
            "name": "book"
        }
    ],
    "paths": {
        "/health/ping": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Mock endpoint to test API response",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    }
                }
            }
        },
        "/seller/sign-up": {
            "post": {
                "tags": [
                    "seller"
                ],
                "summary": "Endpoint to regiser a seller",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Seller"
                        }
                    }
                ]
            }
        },
        "/seller/login": {
            "post": {
                "tags": [
                    "seller"
                ],
                "summary": "Endpoint for Seller to login",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ]
            }
        },
        "/seller/update/{id}": {
            "patch": {
                "tags": [
                    "seller"
                ],
                "summary": "Endpoint to Update a seller",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token in form of: Bearer Token",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of user to be updated",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "schema": {
                            "$ref": "#/definitions/Seller"
                        }
                    }
                ]
            }
        },
        "/seller/delete/{id}": {
            "delete": {
                "tags": [
                    "seller"
                ],
                "summary": "Endpoint to delete a seller",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token in form of: Bearer Token",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of user to be deleted",
                        "required": true
                    }
                ]
            }
        },
        "/book/add": {
            "post": {
                "tags": [
                    "book"
                ],
                "summary": "Endpoint to add a book",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Error message"
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token in form of: Bearer Token",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Request Object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ]
            }
        }
    },
    "definitions": {
        "Seller": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Book": {
            "properties": {
                "title": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        }
    }
}